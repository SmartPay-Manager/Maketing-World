import React from 'react';
import { useState } from 'react';
import { Toaster } from 'react-hot-toast';
import { motion, AnimatePresence } from 'framer-motion';
import { QueryClient, QueryClientProvider } from "@tanstack/react-query";
import { WagmiProvider } from "wagmi";
import Dashboard from './components/terminal/Dashboard';
import { useProxyConnection } from './hooks/useProxyConnection';
import { config } from './config/wagmi';
import WalletConnect from './components/WalletConnect';

// Demo wallet connection simulation
const DEMO_WALLET_ADDRESS = '0x742d35Cc5b8C8CBE8f3B2b4B8e5D8C8b8c8c8c8c';

const queryClient = new QueryClient();

function App() {
  const [walletAddress] = useState<string>(DEMO_WALLET_ADDRESS);
  const { isConnected, isLoading: proxyLoading, error: proxyError } = useProxyConnection();

  // Show error state if proxy connection fails
  if (proxyError) {
    return (
      <WagmiProvider config={config}>
        <QueryClientProvider client={queryClient}>
          <div className="min-h-screen bg-slate-900 flex items-center justify-center p-6">
            <div className="bg-slate-800 border border-red-600/50 rounded-xl p-8 max-w-md w-full text-center">
              <div className="w-16 h-16 bg-red-900/30 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-red-400 text-2xl">⚠️</span>
              </div>
              
              <h2 className="text-xl font-bold text-red-400 mb-2">
                Connection Error
              </h2>
              
              <p className="text-slate-400 mb-6">
                {proxyError instanceof Error ? proxyError.message : 'Unable to connect to DeFi services'}
              </p>
              
              <div className="text-left bg-slate-900/50 rounded-lg p-4 mb-6">
                <h4 className="text-sm font-semibold text-slate-300 mb-2">
                  Quick Fix:
                </h4>
                <ol className="text-xs text-slate-400 space-y-1">
                  <li>1. Check your internet connection</li>
                  <li>2. Verify API configuration</li>
                  <li>3. Restart the application</li>
                </ol>
              </div>
              
              <button
                onClick={() => window.location.reload()}
                className="px-4 py-2 bg-red-600/20 hover:bg-red-600/30 border border-red-600/50 rounded-lg text-red-400 transition-colors"
              >
                Retry Connection
              </button>
            </div>
          </div>
        </QueryClientProvider>
      </WagmiProvider>
    );
  }

  // Show loading state while proxy connection initializes
  if (proxyLoading) {
    return (
      <WagmiProvider config={config}>
        <QueryClientProvider client={queryClient}>
          <div className="min-h-screen bg-slate-900 flex items-center justify-center">
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              className="text-center"
            >
              <motion.div
                animate={{ rotate: 360 }}
                transition={{ duration: 2, repeat: Infinity, ease: "linear" }}
                className="w-16 h-16 border-4 border-green-400/30 border-t-green-400 rounded-full mx-auto mb-6"
              />
              <h1 className="text-2xl font-bold text-green-400 mb-2 font-mono">
                DeFi PulseX Pro 
              </h1>
              <p className="text-slate-400 font-mono">
                Initializing cross-chain protocols...
              </p>
              <div className="mt-4 text-xs text-slate-500 font-mono space-y-1">
                <div>✓ Loading 1inch APIs</div>
                <div>✓ Connecting to XRP Ledger</div>
                <div>✓ Initializing atomic swap protocols</div>
                <div className="text-green-400">✓ Ready for trading</div>
              </div>
            </motion.div>
          </div>
        </QueryClientProvider>
      </WagmiProvider>
    );
  }

  // Main application content
  return (
    <WagmiProvider config={config}>
      <QueryClientProvider client={queryClient}>
        <div className="min-h-screen bg-slate-900">
          <div className="px-6 py-4 border-b border-slate-800">
            <div className="flex justify-between items-center max-w-7xl mx-auto">
              <h1 className="text-xl font-bold text-white">DeFi PulseX Pro</h1>
              <WalletConnect />
            </div>
          </div>
          <Dashboard walletAddress={walletAddress} />
          <Toaster
            position="top-right"
            toastOptions={{
              duration: 4000,
              style: {
                background: '#1e293b',
                color: '#e2e8f0',
                border: '1px solid rgba(51, 65, 85, 0.5)'
              }
            }}
          />

          {/* Connection status indicator */}
          <div className="fixed bottom-4 right-4 z-50">
            <AnimatePresence>
              {!isConnected && (
                <motion.div
                  initial={{ opacity: 0, y: 50 }}
                  animate={{ opacity: 1, y: 0 }}
                  exit={{ opacity: 0, y: 50 }}
                  className="bg-amber-900/90 border border-amber-600/50 rounded-lg px-4 py-2 backdrop-blur-sm"
                >
                  <div className="flex items-center space-x-2 text-amber-400">
                    <div className="w-2 h-2 bg-amber-400 rounded-full animate-pulse" />
                    <span className="text-sm font-medium">Connecting to APIs...</span>
                  </div>
                </motion.div>
              )}
            </AnimatePresence>
          </div>
        </div>
      </QueryClientProvider>
    </WagmiProvider>
  );
}

export default App;
